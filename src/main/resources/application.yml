server:
  port: 8080
  servlet:
    session:
      timeout: 360000s
    # 인코딩 UTF-8로 설정
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  profiles:
    #운영환경 or 로컬 환경 중에 선택
    #로컬 = dev, 운영 = prod
    active: dev


  jpa:
    database-platform: org.hibernate.dialect.MySQL57Dialect
    generate-ddl: true
    show-sql: true
    database: mysql
    properties:
      hibernate:
        show_sql: true
        format_sql: true
    hibernate:
      # activate가 dev일때만, create, create-drop
      ddl-auto: create # create, create-drop, update, validate, none
      # 개발 초기 단계 또는 로컬에서 테스트 : create 또는 update
      # 테스트 서버 : update 또는 validate
      # 스테이징 및 운영 서버 : validate 또는 none
    #      use-new-id-generator-mappings: false
    defer-datasource-initialization: true
  sql:
    init:
      data-locations: classpath:db/data/data.sql
      # activate가 dev일때만 always / prod일때는 never
      mode: always
      platform: mysql
      encoding: UTF-8

security:
  user:
    password: 1
  oauth2:
    client:
      registration:
        #          naver:
        #            client-id: xxx
        #            client-secret: xxx
        #            scope:
        #              - name
        #              - email
        #            #- profile_image
        #            client-name: Naver
        #            authorization-grant-type: authorization_code
        #            redirect-uri: http://localhost:8880/login/oauth2/code/naver

        kakao:
          client-id: ENC(ybsNl19axMPydJ5Fh05A3ju4ZuOUKaY8RjZ9UBEgI8j6tkbKzOcddGKZYft9Xke+)
          client-secret: ENC(AKR8JtrSzkCXl26Uedif7CDNkAXbdkQU4RSkpOStlLbM8wkRlOL67SkSobWrpnnh)
          scope:
            - profile_nickname
            - profile_image
            - account_email
          client-name: kakao
          redirect-uri: http://localhost:8080/login/oauth2/code/kakao # 리다이렉트 uri
          authorization-grant-type: authorization_code
          client-authentication-method: POST


      provider: #네이버, 카카오의 provider는 등록되어 있지 않아 사용자가 등록해야된다.
        #          naver:
        #            authorization-uri: https://nid.naver.com/oauth2.0/authorize #네이버 로그인 창을 받을수 있다
        #            token-uri: https://nid.naver.com/oauth2.0/token #토큰을 받는 uri
        #            user-info-uri: https://openapi.naver.com/v1/nid/me #프로필 주소를 받는 uri
        #            user-name-attribute: response #회원 정보를 json 형태로 받는데 response 라는 키값으로 네이버가 리턴해줌

        kakao:
          authorization-uri: https://kauth.kakao.com/oauth/authorize
          token-uri: https://kauth.kakao.com/oauth/token
          user-info-uri: https://kapi.kakao.com/v2/user/me
          user-name-attribute: id

          # 스프링 OAuth2-client 라이브러리의 provider 에는 구글,페이스북,트위터가 속해있어 redirect-uri , authorization-grant-type 를 적어주지 않아도 자동으로 고정적으로 등록되어 있다.(적어줘도 된다.) ex) /login/oauth2/facebook, google 로 고정
          # 하지만 네이버나 카카오톡은 Provider 가 아니기 때문에 적어주어야된다. 원하는대로 uri 를 지정할수 있다, 고정되어 있지 않다.

      springdoc:
        default-consumes-media-type: application/json;charset=UTF-8
        default-produces-media-type: application/json;charset=UTF-8
        paths-to-match: /**
        swagger-ui:
          path: /
          display-request-duration: true
          groups-order: desc
          operations-sorter: alpha
          disable-swagger-default-url: true
        api-docs:
          groups:
            enabled: true

jasypt:
  encryptor:
    bean: jasyptStringEncryptor